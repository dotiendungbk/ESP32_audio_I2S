; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
env_default = generic

[common_env_data]
platform_espressif32 = espressif32
lib_deps_all =
build_flags = 
; ---> NOTE: For production run set DEBUG_LEVEL level to NONE! <---
; otherwise device may leak RAM
;
; None
; -DCORE_DEBUG_LEVEL=0
; Error
; -DCORE_DEBUG_LEVEL=1
; Warn
; -DCORE_DEBUG_LEVEL=2
; Info
; -DCORE_DEBUG_LEVEL=3
; Debug
; -DCORE_DEBUG_LEVEL=4
; Verbose
 -DCORE_DEBUG_LEVEL=5


[env:generic]
platform = ${common_env_data.platform_espressif32}
framework = arduino 
board = esp32dev
;board_build.partitions = ${common_env_data.board_build.partitions}
upload_speed = 921600
monitor_speed = 115200
lib_deps = 
    ${common_env_data.lib_deps_all}
build_flags =
    ${common_env_data.build_flags}

;//board_build.partitions = no_ota.csv
  
;[env:esp32dev]
;platform = espressif32
;board = esp32dev
;framework = arduino
 

; [platformio]
; env_default = esp32dev

; ; You MUST inject these options into [env:] section
; ; using ${common.***} (see below)
; [common]
; upload_port = COM9
; upload_speed = 9600

; [env:esp32dev] 
; platform = https://github.com/platformio/platform-espressif32.git
; board = esp32dev
; framework = espidf
; upload_speed = ${common.upload_speed}
; upload_port = ${common.upload_port}
; monitor_port = ${common.upload_port}
; debug_tool = custom
; debug_init_break= 
; debug_server =
;  $PLATFORMIO_HOME_DIR/packages/tool-openocd-esp32/bin/openocd
;  -s
;  $PLATFORMIO_HOME_DIR/packages/tool-openocd-esp32/share/openocd/scripts/
;  -f
;  $PLATFORMIO_HOME_DIR/packages/tool-openocd-esp32/share/openocd/scripts/interface/ftdi/digilent_jtag_smt2.cfg
;  -f
;  $PLATFORMIO_HOME_DIR/packages/tool-openocd-esp32/share/openocd/scripts/board/esp-wroom-32.cfg
;  -c 'ftdi_vid_pid 0x0403 0x6014'
; debug_load_cmd=preload
; debug_load_mode=modified

; ; # Debug flags 
; ; -g3 Enables expansion of macros (for getting registers by name)
; ; -O0 Disables optimizations, needed to see local variables while debugging
; ; -w Disables C++11 whitespace macro warning
; build_flags = -O0 -D PIO_FRAMEWORK_ESP_IDF_ENABLE_EXCEPTIONS

; [env:native]
; platform = native
; src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<EspEventChain.cpp> -<EspEventChain.h> -<EspDebug.h> -<EspDebug.cpp>
; test_filter = native
; test_ignore = *%